upstream api {
  server api:8000;
}

server {
  server_name localhost;
  charset utf-8;
  client_max_body_size 20M;
  listen 80;

  # listen 443 ssl;  # Listen on HTTPS

  # Grouped common settings into a single block
  location ~ ^/(api/v1/|{{ cookiecutter.admin_url }}|redoc) {
    proxy_pass http://api;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $host;
    proxy_redirect off;

    # # Other Proxy Settings
    # proxy_set_header X-Forwarded-Proto $scheme;
    # proxy_set_header X-Forwarded-Host $host;
    # proxy_set_header X-Forwarded-Port $server_port;
    # proxy_set_header X-Real-IP $remote_addr;
    # proxy_http_version 1.1;
    # proxy_set_header Upgrade $http_upgrade;
    # proxy_set_header Connection "upgrade";
    # proxy_set_header Host $host;
    # proxy_set_header Connection "";
    # proxy_buffering off;
    # proxy_cache off;
    # proxy_read_timeout 240s;
    # proxy_send_timeout 240s;
  }

  # # Rate limiting settings
  # limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;  # Limit to 10 requests per second per IP
  # limit_req zone=api_limit burst=20;  # Allow bursts of up to 20 requests
  # limit_req_status 429;  # Return status 429 (Too Many Requests) when exceeding the limit

  # # Redirect all HTTP traffic to HTTPS
  # location / {
  #   return 301 https://$host$request_uri;
  # }

  # # SSL configuration
  # listen 443 ssl;
  # ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;
  # ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;
  # ssl_protocols TLSv1.2 TLSv1.3;
  # ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384';
  # ssl_prefer_server_ciphers on;
  # ssl_session_cache shared:SSL:10m;
  # ssl_ecdh_curve secp384r1;
  # ssl_session_timeout 1d;
  # ssl_session_tickets off;
  # ssl_session_cache shared:SSL:50m;
  # ssl_session_tickets off;
  # ssl_stapling on;
  # ssl_stapling_verify on;
  # ssl_trusted_certificate /etc/ssl/certs/nginx-selfsigned.crt;
  # ssl_dhparam /etc/ssl/certs/dhparam.pem;


  # Static files handling
  location /staticfiles/ {
    alias /app/staticfiles/;
    expires 30d;
    add_header Cache-Control "public, max-age=2592000";
  }

  location /mediafiles/ {
    alias /app/mediafiles/;
    expires 30d;
    add_header Cache-Control "public, max-age=2592000";
  }

  # Handle 404 errors and other requests
  location / {
    try_files $uri $uri/ /404.html;  # Serve a custom 404 page
  }

  error_page 404 /404.html;  # Define a custom error page
  location = /404.html {
    internal;  # Prevent direct access to the error page
  }

  # # Security headers (defined globally)
  #   add_header X-Content-Type-Options nosniff;
  #   add_header X-Frame-Options DENY;
  #   add_header X-XSS-Protection "1; mode=block";
  #   add_header Referrer-Policy "same-origin";
  #   add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
  #   add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self'; connect-src 'self'; object-src 'none'; frame-src 'none'; base-uri 'self'; form-action 'self'; frame-ancestors 'none'; block-all-mixed-content; upgrade-insecure-requests; reflected-xss block; referrer no-referrer;";
  #   add_header Feature-Policy "geolocation 'none'; midi 'none'; notifications 'none'; push 'none'; sync-xhr 'none'; microphone 'none'; camera 'none'; magnetometer 'none'; gyroscope 'none'; speaker 'none'; vibrate 'none'; fullscreen 'self'; payment 'none'; usb 'none';";
  #   add_header Permissions-Policy "geolocation=(), midi=(), notifications=(), push=(), sync-xhr=(), microphone=(), camera=(), magnetometer=(), gyroscope=(), speaker=(), vibrate=(), fullscreen=(self), payment=(), usb=()";
  #   add_header X-Permitted-Cross-Domain-Policies "none";
  #   add_header X-Robots-Tag "noindex, nofollow";
  #   add_header X-Download-Options "noopen";
  #   add_header X-Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self'; connect-src 'self'; object-src 'none'; frame-src 'none'; base-uri 'self'; form-action 'self'; frame-ancestors 'none'; block-all-mixed-content; upgrade-insecure-requests; reflected-xss block; referrer no-referrer;";
  #   add_header X-Content-Security-Policy-Report-Only "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self'; connect-src 'self'; object-src 'none'; frame-src 'none'; base-uri 'self'; form-action 'self'; frame-ancestors 'none'; block-all-mixed-content; upgrade-insecure-requests; reflected-xss block; referrer no-referrer;";
  #   add_header X-WebKit-CSP "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self'; connect-src 'self'; object-src 'none'; frame-src 'none'; base-uri 'self'; form-action 'self'; frame-ancestors 'none'; block-all-mixed-content; upgrade-insecure-requests; reflected-xss block; referrer no-referrer;";
}